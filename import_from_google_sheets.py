#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Google Sheets –≤ SQLite –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
"""

import os
import sys
import django
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'climbing_routes_project.settings')
django.setup()

from routes.models import Route
from routes.google_sheets import RoutesGoogleSheetsSync

def import_routes_from_google_sheets():
    """–ò–º–ø–æ—Ä—Ç —Ç—Ä–∞—Å—Å –∏–∑ Google Sheets –≤ SQLite –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    
    print("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –∏–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∏–∑ Google Sheets...")
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Google Sheets
        sync = RoutesGoogleSheetsSync()
        routes_data = sync.import_routes_from_sheets()
        
        print(f"üìä –ü–æ–ª—É—á–µ–Ω–æ {len(routes_data)} —Ç—Ä–∞—Å—Å –∏–∑ Google Sheets")
        
        # –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ
        Route.objects.all().delete()
        print("üóëÔ∏è –û—á–∏—â–µ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö")
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        imported_count = 0
        skipped_count = 0
        track_number_counter = 1
        
        for route_data in routes_data:
            try:
                # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–º–µ—Ä —Ç—Ä–∞—Å—Å—ã, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
                track_number = route_data.get('track_number')
                if not track_number or track_number == 0:
                    track_number = track_number_counter
                    track_number_counter += 1
                
                # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç Route
                route = Route(
                    track_number=track_number,
                    track_lane=route_data.get('track_lane', 1),
                    name=route_data.get('name', ''),
                    difficulty=route_data.get('difficulty', '-'),
                    color=route_data.get('color', ''),
                    author=route_data.get('author', ''),
                    setup_date=route_data.get('setup_date', ''),
                    description=route_data.get('description', ''),
                    is_active=route_data.get('is_active', True)
                )
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
                route.save()
                imported_count += 1
                
                if imported_count % 50 == 0:
                    print(f"‚úÖ –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ {imported_count} —Ç—Ä–∞—Å—Å...")
                    
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ —Ç—Ä–∞—Å—Å—ã {route_data.get('name', 'Unknown')}: {str(e)}")
                skipped_count += 1
                continue
        
        print(f"\nüéâ –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: {imported_count} —Ç—Ä–∞—Å—Å")
        print(f"‚ùå –ü—Ä–æ–ø—É—â–µ–Ω–æ: {skipped_count} —Ç—Ä–∞—Å—Å")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        total_routes = Route.objects.count()
        active_routes = Route.objects.filter(is_active=True).count()
        inactive_routes = Route.objects.filter(is_active=False).count()
        
        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:")
        print(f"   –í—Å–µ–≥–æ —Ç—Ä–∞—Å—Å: {total_routes}")
        print(f"   –ê–∫—Ç–∏–≤–Ω—ã—Ö: {active_routes}")
        print(f"   –ù–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö: {inactive_routes}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –¥–æ—Ä–æ–∂–∫–∞–º
        print(f"\nüõ§Ô∏è –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –¥–æ—Ä–æ–∂–∫–∞–º:")
        for lane in range(1, 36):
            count = Route.objects.filter(track_lane=lane).count()
            if count > 0:
                print(f"   –î–æ—Ä–æ–∂–∫–∞ {lane}: {count} —Ç—Ä–∞—Å—Å")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ: {str(e)}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ –∏–º–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Google Sheets –≤ SQLite")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets
    try:
        sync = RoutesGoogleSheetsSync()
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets: {str(e)}")
        return
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∏–º–ø–æ—Ä—Ç
    success = import_routes_from_google_sheets()
    
    if success:
        print("\nüéâ –ò–º–ø–æ—Ä—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!")
        print("–¢–µ–ø–µ—Ä—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ SQLite –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
    else:
        print("\n‚ùå –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–∞–º–∏")
        sys.exit(1)

if __name__ == "__main__":
    main()
