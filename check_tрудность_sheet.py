#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∏—Å—Ç–∞ "–¢—Ä—É–¥–Ω–æ—Å—Ç—å" –≤ Google Sheets
"""

import os
import sys
import django

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append('/Users/Kostya/Documents/climbing_routes_project')

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'climbing_routes_project.settings')
django.setup()

from routes.google_sheets import GoogleSheetsManager

def check_t—Ä—É–¥–Ω–æ—Å—Ç—å_sheet():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏—Å—Ç–∞ –¢—Ä—É–¥–Ω–æ—Å—Ç—å"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏—Å—Ç–∞ '–¢—Ä—É–¥–Ω–æ—Å—Ç—å'")
    print("=" * 50)
    
    try:
        manager = GoogleSheetsManager()
        if not manager.service:
            print("‚ùå Google Sheets API –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω")
            return
        
        print(f"‚úÖ Google Sheets API –ø–æ–¥–∫–ª—é—á–µ–Ω")
        print(f"   Spreadsheet ID: {manager.spreadsheet_id}")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–∞–±–ª–∏—Ü–µ
        spreadsheet = manager.service.spreadsheets().get(
            spreadsheetId=manager.spreadsheet_id
        ).execute()
        
        print(f"\nüìã –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã: {spreadsheet.get('properties', {}).get('title', 'Unknown')}")
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ª–∏—Å—Ç–æ–≤
        sheets = spreadsheet.get('sheets', [])
        print(f"\nüìä –ù–∞–π–¥–µ–Ω–æ –ª–∏—Å—Ç–æ–≤: {len(sheets)}")
        
        —Ç—Ä—É–¥–Ω–æ—Å—Ç—å_sheet = None
        for i, sheet in enumerate(sheets):
            title = sheet.get('properties', {}).get('title', 'Unknown')
            sheet_id = sheet.get('properties', {}).get('sheetId', 'Unknown')
            print(f"   {i+1}. '{title}' (ID: {sheet_id})")
            
            if title == '–¢—Ä—É–¥–Ω–æ—Å—Ç—å':
                —Ç—Ä—É–¥–Ω–æ—Å—Ç—å_sheet = sheet
                print(f"      ‚úÖ –ù–∞–π–¥–µ–Ω –ª–∏—Å—Ç '–¢—Ä—É–¥–Ω–æ—Å—Ç—å'")
        
        if not —Ç—Ä—É–¥–Ω–æ—Å—Ç—å_sheet:
            print("\n‚ùå –õ–∏—Å—Ç '–¢—Ä—É–¥–Ω–æ—Å—Ç—å' –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return
        
        # –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ª–∏—Å—Ç–∞ –¢—Ä—É–¥–Ω–æ—Å—Ç—å
        print(f"\nüìñ –ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ª–∏—Å—Ç–∞ '–¢—Ä—É–¥–Ω–æ—Å—Ç—å'...")
        try:
            data = manager.read_sheet('–¢—Ä—É–¥–Ω–æ—Å—Ç—å!A1:Z20')
            print(f"‚úÖ –ü—Ä–æ—á–∏—Ç–∞–Ω–æ {len(data)} —Å—Ç—Ä–æ–∫")
            
            if data:
                print(f"\nüìã –ó–∞–≥–æ–ª–æ–≤–∫–∏:")
                for i, header in enumerate(data[0]):
                    print(f"   {i+1}. {header}")
                
                if len(data) > 1:
                    print(f"\nüìä –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–∞–Ω–Ω—ã—Ö:")
                    for i, cell in enumerate(data[1]):
                        print(f"   {data[0][i] if i < len(data[0]) else f'Column {i+1}'}: {cell}")
                
                if len(data) > 2:
                    print(f"\nüìä –í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–∞–Ω–Ω—ã—Ö:")
                    for i, cell in enumerate(data[2]):
                        print(f"   {data[0][i] if i < len(data[0]) else f'Column {i+1}'}: {cell}")
                        
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {e}")
            import traceback
            traceback.print_exc()
            
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == '__main__':
    check_t—Ä—É–¥–Ω–æ—Å—Ç—å_sheet()
