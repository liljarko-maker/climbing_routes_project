#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑—ã –≤ —Ö–æ—Å—Ç–∏–Ω–≥ PythonAnywhere
"""

import os
import django
import requests
import json
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'climbing_routes_project.settings')
django.setup()

from routes.models import Route, AdminUser

def export_routes_to_hosting():
    """–≠–∫—Å–ø–æ—Ä—Ç —Ç—Ä–∞—Å—Å –Ω–∞ —Ö–æ—Å—Ç–∏–Ω–≥"""
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º —ç–∫—Å–ø–æ—Ä—Ç —Ç—Ä–∞—Å—Å –Ω–∞ —Ö–æ—Å—Ç–∏–Ω–≥...")
    
    # URL —Ö–æ—Å—Ç–∏–Ω–≥–∞
    hosting_url = "https://koterik.pythonanywhere.com"
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç—Ä–∞—Å—Å—ã –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑—ã
    routes = Route.objects.all()
    print(f"üìä –ù–∞–π–¥–µ–Ω–æ {routes.count()} —Ç—Ä–∞—Å—Å –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑–µ")
    
    exported_count = 0
    failed_count = 0
    
    for route in routes:
        try:
            # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
            route_data = {
                'route_number': route.route_number,
                'track_lane': route.track_lane,
                'name': route.name,
                'difficulty': route.difficulty,
                'author': route.author,
                'color': route.color,
                'setup_date': str(route.setup_date) if route.setup_date else '',
                'description': route.description or '',
                'is_active': route.is_active
            }
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ö–æ—Å—Ç–∏–Ω–≥
            response = requests.post(
                f"{hosting_url}/api/routes/",
                json=route_data,
                headers={'Content-Type': 'application/json'},
                timeout=30
            )
            
            if response.status_code in [200, 201]:
                exported_count += 1
                print(f"‚úÖ –¢—Ä–∞—Å—Å–∞ {route.route_number} ({route.name}) —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞")
            else:
                failed_count += 1
                print(f"‚ùå –û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ —Ç—Ä–∞—Å—Å—ã {route.route_number}: {response.status_code}")
                print(f"   –û—Ç–≤–µ—Ç: {response.text}")
                
        except Exception as e:
            failed_count += 1
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ —Ç—Ä–∞—Å—Å—ã {route.route_number}: {e}")
    
    print(f"\nüìà –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —ç–∫—Å–ø–æ—Ä—Ç–∞:")
    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: {exported_count}")
    print(f"‚ùå –û—à–∏–±–æ–∫: {failed_count}")
    
    return exported_count, failed_count

def export_admin_users_to_hosting():
    """–≠–∫—Å–ø–æ—Ä—Ç –∞–¥–º–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ —Ö–æ—Å—Ç–∏–Ω–≥"""
    print("\nüë§ –ù–∞—á–∏–Ω–∞–µ–º —ç–∫—Å–ø–æ—Ä—Ç –∞–¥–º–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    
    hosting_url = "https://koterik.pythonanywhere.com"
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –∞–¥–º–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    admin_users = AdminUser.objects.all()
    print(f"üë• –ù–∞–π–¥–µ–Ω–æ {admin_users.count()} –∞–¥–º–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    
    exported_count = 0
    failed_count = 0
    
    for admin in admin_users:
        try:
            # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
            admin_data = {
                'username': admin.username,
                'password': 'admin123',  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–∞—Ä–æ–ª—å
                'full_name': admin.full_name
            }
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ö–æ—Å—Ç–∏–Ω–≥
            response = requests.post(
                f"{hosting_url}/api/admin/create/",
                json=admin_data,
                headers={'Content-Type': 'application/json'},
                timeout=30
            )
            
            if response.status_code in [200, 201]:
                exported_count += 1
                print(f"‚úÖ –ê–¥–º–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {admin.username} —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
            else:
                failed_count += 1
                print(f"‚ùå –û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –∞–¥–º–∏–Ω–∞ {admin.username}: {response.status_code}")
                print(f"   –û—Ç–≤–µ—Ç: {response.text}")
                
        except Exception as e:
            failed_count += 1
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –∞–¥–º–∏–Ω–∞ {admin.username}: {e}")
    
    print(f"\nüìà –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —ç–∫—Å–ø–æ—Ä—Ç–∞ –∞–¥–º–∏–Ω–æ–≤:")
    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: {exported_count}")
    print(f"‚ùå –û—à–∏–±–æ–∫: {failed_count}")
    
    return exported_count, failed_count

def check_hosting_status():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Ö–æ—Å—Ç–∏–Ω–≥–∞"""
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Ö–æ—Å—Ç–∏–Ω–≥–∞...")
    
    hosting_url = "https://koterik.pythonanywhere.com"
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        response = requests.get(f"{hosting_url}/", timeout=10)
        if response.status_code == 200:
            print("‚úÖ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Ö–æ—Å—Ç–∏–Ω–≥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞")
        else:
            print(f"‚ùå –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: {response.status_code}")
            return False
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º API
        response = requests.get(f"{hosting_url}/api/routes/", timeout=10)
        if response.status_code == 200:
            print("‚úÖ API —Ö–æ—Å—Ç–∏–Ω–≥–∞ –¥–æ—Å—Ç—É–ø–µ–Ω")
        else:
            print(f"‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            return False
            
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Ö–æ—Å—Ç–∏–Ω–≥—É: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üåê –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –Ω–∞ PythonAnywhere")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Ö–æ—Å—Ç–∏–Ω–≥–∞
    if not check_hosting_status():
        print("‚ùå –•–æ—Å—Ç–∏–Ω–≥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.")
        return
    
    print("\n" + "=" * 50)
    
    # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç—Ä–∞—Å—Å—ã
    routes_exported, routes_failed = export_routes_to_hosting()
    
    # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∞–¥–º–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    admins_exported, admins_failed = export_admin_users_to_hosting()
    
    print("\n" + "=" * 50)
    print("üìä –ò–¢–û–ì–û–í–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
    print(f"–¢—Ä–∞—Å—Å—ã: {routes_exported} —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ, {routes_failed} –æ—à–∏–±–æ–∫")
    print(f"–ê–¥–º–∏–Ω—ã: {admins_exported} —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ, {admins_failed} –æ—à–∏–±–æ–∫")
    
    if routes_failed == 0 and admins_failed == 0:
        print("üéâ –í—Å–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –Ω–∞ —Ö–æ—Å—Ç–∏–Ω–≥!")
    else:
        print("‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ —É–¥–∞–ª–æ—Å—å —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å")

if __name__ == '__main__':
    main()
