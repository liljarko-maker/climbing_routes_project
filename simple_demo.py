#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è API —Ç—Ä–∞—Å—Å —Å–∫–∞–ª–æ–¥—Ä–æ–º–∞
–†–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ Django - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ª–æ–≥–∏–∫—É —Ä–∞–±–æ—Ç—ã API
"""

import json
from datetime import datetime

class SimpleRouteAPI:
    """–ü—Ä–æ—Å—Ç–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è API –¥–ª—è —Ç—Ä–∞—Å—Å"""
    
    def __init__(self):
        self.routes = []
        self.next_id = 1
        
    def add_route(self, name, difficulty, author, color, description=""):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π —Ç—Ä–∞—Å—Å—ã"""
        route = {
            "id": self.next_id,
            "name": name,
            "difficulty": difficulty,
            "author": author,
            "color": color,
            "description": description,
            "created_at": datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
            "is_active": True
        }
        
        self.routes.append(route)
        self.next_id += 1
        
        print(f"‚úÖ –¢—Ä–∞—Å—Å–∞ '{name}' –¥–æ–±–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ! (ID: {route['id']})")
        return route
    
    def get_routes(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç—Ä–∞—Å—Å"""
        return self.routes
    
    def search_routes(self, **filters):
        """–ü–æ–∏—Å–∫ —Ç—Ä–∞—Å—Å –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º"""
        results = self.routes.copy()
        
        if 'difficulty' in filters:
            results = [r for r in results if r['difficulty'] == filters['difficulty']]
        
        if 'author' in filters:
            results = [r for r in results if filters['author'].lower() in r['author'].lower()]
        
        if 'color' in filters:
            results = [r for r in results if filters['color'].lower() in r['color'].lower()]
        
        return results
    
    def get_stats(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
        total = len(self.routes)
        active = len([r for r in self.routes if r['is_active']])
        
        difficulty_stats = {}
        for route in self.routes:
            diff = route['difficulty']
            difficulty_stats[diff] = difficulty_stats.get(diff, 0) + 1
        
        color_stats = {}
        for route in self.routes:
            color = route['color']
            color_stats[color] = color_stats.get(color, 0) + 1
        
        return {
            "total_routes": total,
            "active_routes": active,
            "inactive_routes": total - active,
            "difficulty_distribution": difficulty_stats,
            "color_distribution": color_stats
        }

def print_routes(routes, title="–°–ø–∏—Å–æ–∫ —Ç—Ä–∞—Å—Å"):
    """–ö—Ä–∞—Å–∏–≤—ã–π –≤—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞ —Ç—Ä–∞—Å—Å"""
    print(f"\n{'='*60}")
    print(f" {title}")
    print(f"{'='*60}")
    
    if not routes:
        print("–¢—Ä–∞—Å—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return
    
    for route in routes:
        print(f"ID: {route['id']}")
        print(f"–ù–∞–∑–≤–∞–Ω–∏–µ: {route['name']}")
        print(f"–°–ª–æ–∂–Ω–æ—Å—Ç—å: {route['difficulty']}")
        print(f"–ê–≤—Ç–æ—Ä: {route['author']}")
        print(f"–¶–≤–µ—Ç: {route['color']}")
        print(f"–°–æ–∑–¥–∞–Ω–∞: {route['created_at']}")
        if route['description']:
            print(f"–û–ø–∏—Å–∞–Ω–∏–µ: {route['description']}")
        print("-" * 40)

def print_stats(stats):
    """–ö—Ä–∞—Å–∏–≤—ã–π –≤—ã–≤–æ–¥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    print(f"\n{'='*60}")
    print(f" –°–¢–ê–¢–ò–°–¢–ò–ö–ê –¢–†–ê–°–°")
    print(f"{'='*60}")
    print(f"–í—Å–µ–≥–æ —Ç—Ä–∞—Å—Å: {stats['total_routes']}")
    print(f"–ê–∫—Ç–∏–≤–Ω—ã—Ö: {stats['active_routes']}")
    print(f"–ù–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö: {stats['inactive_routes']}")
    
    print(f"\n–ü–æ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏:")
    for diff, count in stats['difficulty_distribution'].items():
        print(f"  {diff}: {count}")
    
    print(f"\n–ü–æ —Ü–≤–µ—Ç–∞–º:")
    for color, count in stats['color_distribution'].items():
        print(f"  {color}: {count}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    print("üèîÔ∏è –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø API –¢–†–ê–°–° –°–ö–ê–õ–û–î–†–û–ú–ê")
    print("=" * 60)
    
    api = SimpleRouteAPI()
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç—Ä–∞—Å—Å
    print("\n1Ô∏è‚É£ –î–û–ë–ê–í–õ–ï–ù–ò–ï –¢–†–ê–°–°")
    print("-" * 30)
    
    api.add_route(
        "–ö—Ä–∞—Å–Ω–∞—è –ª–∏–Ω–∏—è",
        "medium",
        "–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤",
        "–∫—Ä–∞—Å–Ω—ã–π",
        "–ò–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è —Ç—Ä–∞—Å—Å–∞ —Å —Ç–µ—Ö–Ω–∏—á–Ω—ã–º–∏ –¥–≤–∏–∂–µ–Ω–∏—è–º–∏"
    )
    
    api.add_route(
        "–°–∏–Ω–∏–π –º–∞—Ä—à—Ä—É—Ç",
        "easy",
        "–ê–Ω–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞",
        "—Å–∏–Ω–∏–π",
        "–ü—Ä–æ—Å—Ç–∞—è —Ç—Ä–∞—Å—Å–∞ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö"
    )
    
    api.add_route(
        "–ß–µ—Ä–Ω–∞—è –¥—ã—Ä–∞",
        "expert",
        "–ú–∏—Ö–∞–∏–ª –ö–æ–∑–ª–æ–≤",
        "—á–µ—Ä–Ω—ã–π",
        "–≠–∫—Å–ø–µ—Ä—Ç–Ω–∞—è —Ç—Ä–∞—Å—Å–∞ –¥–ª—è –æ–ø—ã—Ç–Ω—ã—Ö —Å–∫–∞–ª–æ–ª–∞–∑–æ–≤"
    )
    
    api.add_route(
        "–ó–µ–ª–µ–Ω–∞—è —Å—Ç–µ–Ω–∞",
        "hard",
        "–ï–ª–µ–Ω–∞ –í–æ–ª–∫–æ–≤–∞",
        "–∑–µ–ª–µ–Ω—ã–π",
        "–°–ª–æ–∂–Ω–∞—è —Ç—Ä–∞—Å—Å–∞ —Å –º–æ—â–Ω—ã–º–∏ –¥–≤–∏–∂–µ–Ω–∏—è–º–∏"
    )
    
    # –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Ç—Ä–∞—Å—Å—ã
    print("\n2Ô∏è‚É£ –í–°–ï –¢–†–ê–°–°–´")
    print("-" * 30)
    all_routes = api.get_routes()
    print_routes(all_routes)
    
    # –ü–æ–∏—Å–∫ –ø–æ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
    print("\n3Ô∏è‚É£ –ü–û–ò–°–ö –ü–û –°–õ–û–ñ–ù–û–°–¢–ò (medium)")
    print("-" * 30)
    medium_routes = api.search_routes(difficulty="medium")
    print_routes(medium_routes, "–°—Ä–µ–¥–Ω–∏–µ —Ç—Ä–∞—Å—Å—ã")
    
    # –ü–æ–∏—Å–∫ –ø–æ –∞–≤—Ç–æ—Ä—É
    print("\n4Ô∏è‚É£ –ü–û–ò–°–ö –ü–û –ê–í–¢–û–†–£ (–ò–≤–∞–Ω)")
    print("-" * 30)
    ivan_routes = api.search_routes(author="–ò–≤–∞–Ω")
    print_routes(ivan_routes, "–¢—Ä–∞—Å—Å—ã –∞–≤—Ç–æ—Ä–∞ –ò–≤–∞–Ω")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print("\n5Ô∏è‚É£ –°–¢–ê–¢–ò–°–¢–ò–ö–ê")
    print("-" * 30)
    stats = api.get_stats()
    print_stats(stats)
    
    # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
    print("\n6Ô∏è‚É£ –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–´–ô –†–ï–ñ–ò–ú")
    print("-" * 30)
    print("–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å —Å–≤–æ–∏ —Ç—Ä–∞—Å—Å—ã!")
    print("–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ —Ç—Ä–∞—Å—Å—ã (–∏–ª–∏ 'quit' –¥–ª—è –≤—ã—Ö–æ–¥–∞):")
    
    while True:
        print("\n" + "="*40)
        print("–î–û–ë–ê–í–õ–ï–ù–ò–ï –ù–û–í–û–ô –¢–†–ê–°–°–´")
        print("="*40)
        
        name = input("–ù–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–∞—Å—Å—ã: ").strip()
        if name.lower() == 'quit':
            break
        
        print("–£—Ä–æ–≤–Ω–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏: easy, medium, hard, expert")
        difficulty = input("–°–ª–æ–∂–Ω–æ—Å—Ç—å: ").strip()
        
        author = input("–ê–≤—Ç–æ—Ä: ").strip()
        color = input("–¶–≤–µ—Ç: ").strip()
        description = input("–û–ø–∏—Å–∞–Ω–∏–µ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ): ").strip()
        
        if not name or not difficulty or not author or not color:
            print("‚ùå –í—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω—ã!")
            continue
        
        route = api.add_route(name, difficulty, author, color, description)
        
        # –ü–æ–∫–∞–∑–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫
        print(f"\nüìã –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ç—Ä–∞—Å—Å ({len(api.get_routes())} —Ç—Ä–∞—Å—Å):")
        print_routes(api.get_routes())
    
    # –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print("\n" + "="*60)
    print(" –§–ò–ù–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê")
    print("="*60)
    final_stats = api.get_stats()
    print_stats(final_stats)
    
    print("\nüéâ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!")
    print("–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ API —Ç—Ä–∞—Å—Å —Å–∫–∞–ª–æ–¥—Ä–æ–º–∞!")

if __name__ == "__main__":
    main()
