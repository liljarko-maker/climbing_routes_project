#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
"""

import requests
import time
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

def test_responsive_design():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–≥–æ –¥–∏–∑–∞–π–Ω–∞"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–≥–æ –¥–∏–∑–∞–π–Ω–∞")
    print("=" * 50)
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Chrome –¥–ª—è headless —Ä–µ–∂–∏–º–∞
    chrome_options = Options()
    chrome_options.add_argument("--headless")
    chrome_options.add_argument("--no-sandbox")
    chrome_options.add_argument("--disable-dev-shm-usage")
    
    # –†–∞–∑—Ä–µ—à–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    resolutions = [
        {"name": "iPhone SE", "width": 375, "height": 667},
        {"name": "iPhone 12", "width": 390, "height": 844},
        {"name": "iPad", "width": 768, "height": 1024},
        {"name": "Desktop", "width": 1920, "height": 1080},
    ]
    
    base_url = "http://127.0.0.1:8000"
    
    try:
        driver = webdriver.Chrome(options=chrome_options)
        
        for resolution in resolutions:
            print(f"\nüì± –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ {resolution['name']} ({resolution['width']}x{resolution['height']})")
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ
            driver.set_window_size(resolution['width'], resolution['height'])
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
            print("  üîç –ó–∞–≥—Ä—É–∑–∫–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")
            driver.get(f"{base_url}/")
            
            # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏
            WebDriverWait(driver, 10).until(
                EC.presence_of_element_located((By.TAG_NAME, "body"))
            )
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
            try:
                # –ù–∞–≤–∏–≥–∞—Ü–∏—è
                navbar = driver.find_element(By.CLASS_NAME, "navbar")
                print(f"    ‚úÖ –ù–∞–≤–∏–≥–∞—Ü–∏—è: {navbar.size['width']}x{navbar.size['height']}")
                
                # –ö–∞—Ä—Ç–æ—á–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
                cards = driver.find_elements(By.CLASS_NAME, "card")
                print(f"    ‚úÖ –ö–∞—Ä—Ç–æ—á–∫–∏: –Ω–∞–π–¥–µ–Ω–æ {len(cards)} –∫–∞—Ä—Ç–æ—á–µ–∫")
                
                # –¢–∞–±–ª–∏—Ü–∞
                table = driver.find_element(By.CLASS_NAME, "table-responsive")
                print(f"    ‚úÖ –¢–∞–±–ª–∏—Ü–∞: {table.size['width']}x{table.size['height']}")
                
                # –§–∏–ª—å—Ç—Ä—ã
                filters = driver.find_element(By.CLASS_NAME, "filter-section")
                print(f"    ‚úÖ –§–∏–ª—å—Ç—Ä—ã: {filters.size['width']}x{filters.size['height']}")
                
            except Exception as e:
                print(f"    ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {e}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º CSS –º–µ–¥–∏–∞-–∑–∞–ø—Ä–æ—Å—ã
            css_rules = driver.execute_script("""
                var sheets = document.styleSheets;
                var mediaQueries = [];
                for (var i = 0; i < sheets.length; i++) {
                    try {
                        var rules = sheets[i].cssRules || sheets[i].rules;
                        for (var j = 0; j < rules.length; j++) {
                            if (rules[j].type === CSSRule.MEDIA_RULE) {
                                mediaQueries.push(rules[j].media.mediaText);
                            }
                        }
                    } catch(e) {
                        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ CORS
                    }
                }
                return mediaQueries;
            """)
            
            print(f"    üìä –ù–∞–π–¥–µ–Ω–æ {len(css_rules)} –º–µ–¥–∏–∞-–∑–∞–ø—Ä–æ—Å–æ–≤")
            
            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç
            screenshot_name = f"screenshot_{resolution['name'].replace(' ', '_').lower()}.png"
            driver.save_screenshot(screenshot_name)
            print(f"    üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {screenshot_name}")
            
            time.sleep(1)
        
        driver.quit()
        print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ:")
        print("   - –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://127.0.0.1:8000")
        print("   - –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω Chrome –∏ ChromeDriver")
        print("   - –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω selenium: pip install selenium")

def test_css_files():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ CSS —Ñ–∞–π–ª–æ–≤"""
    print("\nüé® –ü—Ä–æ–≤–µ—Ä–∫–∞ CSS —Ñ–∞–π–ª–æ–≤")
    print("=" * 30)
    
    base_url = "http://127.0.0.1:8000"
    css_files = [
        "/static/css/style.css",
        "/static/css/mobile.css"
    ]
    
    for css_file in css_files:
        try:
            response = requests.get(f"{base_url}{css_file}")
            if response.status_code == 200:
                size_kb = len(response.content) / 1024
                print(f"‚úÖ {css_file}: {size_kb:.1f} KB")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–µ–¥–∏–∞-–∑–∞–ø—Ä–æ—Å–æ–≤
                content = response.text
                media_queries = content.count("@media")
                print(f"   üì± –ú–µ–¥–∏–∞-–∑–∞–ø—Ä–æ—Å–æ–≤: {media_queries}")
                
            else:
                print(f"‚ùå {css_file}: HTTP {response.status_code}")
                
        except Exception as e:
            print(f"‚ùå {css_file}: {e}")

def test_html_templates():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ HTML —à–∞–±–ª–æ–Ω–æ–≤"""
    print("\nüìÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ HTML —à–∞–±–ª–æ–Ω–æ–≤")
    print("=" * 30)
    
    base_url = "http://127.0.0.1:8000"
    pages = [
        "/",
        "/api/login/",
        "/api/admin/"
    ]
    
    for page in pages:
        try:
            response = requests.get(f"{base_url}{page}")
            if response.status_code == 200:
                content = response.text
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º viewport meta tag
                if 'viewport' in content:
                    print(f"‚úÖ {page}: viewport meta tag –Ω–∞–π–¥–µ–Ω")
                else:
                    print(f"‚ùå {page}: viewport meta tag –Ω–µ –Ω–∞–π–¥–µ–Ω")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ CSS —Ñ–∞–π–ª–æ–≤
                css_count = content.count("style.css") + content.count("mobile.css")
                print(f"   üé® CSS —Ñ–∞–π–ª–æ–≤ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ: {css_count}")
                
            else:
                print(f"‚ùå {page}: HTTP {response.status_code}")
                
        except Exception as e:
            print(f"‚ùå {page}: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üì± –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–≥–æ –¥–∏–∑–∞–π–Ω–∞")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞
    try:
        response = requests.get("http://127.0.0.1:8000/", timeout=5)
        if response.status_code == 200:
            print("‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω")
        else:
            print(f"‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: HTTP {response.status_code}")
            return
    except Exception as e:
        print(f"‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
        return
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    test_css_files()
    test_html_templates()
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å Selenium (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
    try:
        test_responsive_design()
    except ImportError:
        print("\n‚ö†Ô∏è  Selenium –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ:")
        print("   pip install selenium")
        print("   –ò —Å–∫–∞—á–∞–π—Ç–µ ChromeDriver")
    except Exception as e:
        print(f"\n‚ö†Ô∏è  –û—à–∏–±–∫–∞ Selenium —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
    
    print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\nüí° –î–ª—è —Ä—É—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print("   1. –û—Ç–∫—Ä–æ–π—Ç–µ http://127.0.0.1:8000/")
    print("   2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ (F12)")
    print("   3. –ü–µ—Ä–µ–∫–ª—é—á–∞–π—Ç–µ—Å—å –º–µ–∂–¥—É —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è–º–∏")
    print("   4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö")

if __name__ == '__main__':
    main()
