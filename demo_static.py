#!/usr/bin/env python3
"""
–°—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è API —Ç—Ä–∞—Å—Å —Å–∫–∞–ª–æ–¥—Ä–æ–º–∞
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å API –±–µ–∑ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
"""

import json
from datetime import datetime

def print_section(title):
    """–ö—Ä–∞—Å–∏–≤—ã–π –≤—ã–≤–æ–¥ –∑–∞–≥–æ–ª–æ–≤–∫–∞"""
    print(f"\n{'='*60}")
    print(f" {title}")
    print(f"{'='*60}")

def print_json(data, title="JSON Response"):
    """–ö—Ä–∞—Å–∏–≤—ã–π –≤—ã–≤–æ–¥ JSON"""
    print(f"\n{title}:")
    print(json.dumps(data, indent=2, ensure_ascii=False))

def demo_api_structure():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã API"""
    print_section("üèóÔ∏è –°–¢–†–£–ö–¢–£–†–ê API –¢–†–ê–°–° –°–ö–ê–õ–û–î–†–û–ú–ê")
    
    print("""
üìã –û–°–ù–û–í–ù–´–ï ENDPOINTS:

üîπ CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏:
   GET    /api/routes/              - –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç—Ä–∞—Å—Å
   POST   /api/routes/              - –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ç—Ä–∞—Å—Å—ã
   GET    /api/routes/{id}/         - –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ç—Ä–∞—Å—Å—ã
   PUT    /api/routes/{id}/         - –ü–æ–ª–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç—Ä–∞—Å—Å—ã
   PATCH  /api/routes/{id}/         - –ß–∞—Å—Ç–∏—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç—Ä–∞—Å—Å—ã
   DELETE /api/routes/{id}/         - –£–¥–∞–ª–µ–Ω–∏–µ —Ç—Ä–∞—Å—Å—ã

üîπ –ú–∞—Å—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏:
   POST   /api/routes/bulk/         - –ú–∞—Å—Å–æ–≤–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∞—Å—Å
   DELETE /api/routes/bulk/         - –ú–∞—Å—Å–æ–≤–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Ç—Ä–∞—Å—Å
   POST   /api/routes/bulk-update/  - –ú–∞—Å—Å–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç—Ä–∞—Å—Å

üîπ –ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è:
   GET    /api/routes/search/       - –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫
   GET    /api/routes/authors/      - –°–ø–∏—Å–æ–∫ –∞–≤—Ç–æ—Ä–æ–≤ —Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
   GET    /api/routes/colors/       - –°–ø–∏—Å–æ–∫ —Ü–≤–µ—Ç–æ–≤ —Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
   POST   /api/routes/{id}/toggle-active/ - –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞

üîπ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ:
   GET    /api/difficulty-levels/   - –£—Ä–æ–≤–Ω–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
   GET    /api/stats/               - –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    """)

def demo_data_structures():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä –¥–∞–Ω–Ω—ã—Ö"""
    print_section("üìä –°–¢–†–£–ö–¢–£–†–´ –î–ê–ù–ù–´–•")
    
    # –ü—Ä–∏–º–µ—Ä —Ç—Ä–∞—Å—Å—ã
    sample_route = {
        "id": 1,
        "name": "–ö—Ä–∞—Å–Ω–∞—è –ª–∏–Ω–∏—è",
        "difficulty": "medium",
        "difficulty_display": "–°—Ä–µ–¥–Ω—è—è",
        "author": "–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤",
        "color": "–∫—Ä–∞—Å–Ω—ã–π",
        "created_at": "2024-01-01T12:00:00Z",
        "description": "–ò–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è —Ç—Ä–∞—Å—Å–∞ —Å —Ç–µ—Ö–Ω–∏—á–Ω—ã–º–∏ –¥–≤–∏–∂–µ–Ω–∏—è–º–∏",
        "is_active": True
    }
    
    print_json(sample_route, "–ü—Ä–∏–º–µ—Ä —Ç—Ä–∞—Å—Å—ã")
    
    # –£—Ä–æ–≤–Ω–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
    difficulty_levels = [
        {"value": "easy", "label": "–õ–µ–≥–∫–∞—è"},
        {"value": "medium", "label": "–°—Ä–µ–¥–Ω—è—è"},
        {"value": "hard", "label": "–°–ª–æ–∂–Ω–∞—è"},
        {"value": "expert", "label": "–≠–∫—Å–ø–µ—Ä—Ç–Ω–∞—è"}
    ]
    
    print_json(difficulty_levels, "–£—Ä–æ–≤–Ω–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    stats = {
        "total_routes": 15,
        "active_routes": 12,
        "inactive_routes": 3,
        "difficulty_distribution": {
            "easy": {"label": "–õ–µ–≥–∫–∞—è", "count": 5},
            "medium": {"label": "–°—Ä–µ–¥–Ω—è—è", "count": 6},
            "hard": {"label": "–°–ª–æ–∂–Ω–∞—è", "count": 3},
            "expert": {"label": "–≠–∫—Å–ø–µ—Ä—Ç–Ω–∞—è", "count": 1}
        },
        "color_distribution": {
            "–∫—Ä–∞—Å–Ω—ã–π": 4,
            "—Å–∏–Ω–∏–π": 3,
            "–∑–µ–ª–µ–Ω—ã–π": 2,
            "—á–µ—Ä–Ω—ã–π": 2,
            "–∂–µ–ª—Ç—ã–π": 2,
            "—Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π": 2
        }
    }
    
    print_json(stats, "–ü—Ä–∏–º–µ—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")

def demo_api_examples():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–∏–º–µ—Ä–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è API"""
    print_section("üîß –ü–†–ò–ú–ï–†–´ –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø API")
    
    print("""
üìù –°–û–ó–î–ê–ù–ò–ï –¢–†–ê–°–°–´:
curl -X POST http://127.0.0.1:8000/api/routes/ \\
  -H "Content-Type: application/json" \\
  -d '{
    "name": "–ù–æ–≤–∞—è —Ç—Ä–∞—Å—Å–∞",
    "difficulty": "medium",
    "author": "–ê–≤—Ç–æ—Ä",
    "color": "–∫—Ä–∞—Å–Ω—ã–π",
    "description": "–û–ø–∏—Å–∞–Ω–∏–µ —Ç—Ä–∞—Å—Å—ã"
  }'

üìã –ü–û–õ–£–ß–ï–ù–ò–ï –°–ü–ò–°–ö–ê –¢–†–ê–°–°:
curl http://127.0.0.1:8000/api/routes/

üîç –ü–û–ò–°–ö –ü–û –°–õ–û–ñ–ù–û–°–¢–ò:
curl "http://127.0.0.1:8000/api/routes/search/?difficulty=medium"

üîç –ü–û–ò–°–ö –ü–û –ê–í–¢–û–†–£:
curl "http://127.0.0.1:8000/api/routes/search/?author=–ò–≤–∞–Ω"

üîç –ö–û–ú–ë–ò–ù–ò–†–û–í–ê–ù–ù–´–ô –ü–û–ò–°–ö:
curl "http://127.0.0.1:8000/api/routes/search/?difficulty=easy&is_active=true&ordering=name"

üì¶ –ú–ê–°–°–û–í–û–ï –°–û–ó–î–ê–ù–ò–ï:
curl -X POST http://127.0.0.1:8000/api/routes/bulk/ \\
  -H "Content-Type: application/json" \\
  -d '{
    "routes": [
      {
        "name": "–¢—Ä–∞—Å—Å–∞ 1",
        "difficulty": "easy",
        "author": "–ê–≤—Ç–æ—Ä 1",
        "color": "–∑–µ–ª–µ–Ω—ã–π"
      },
      {
        "name": "–¢—Ä–∞—Å—Å–∞ 2",
        "difficulty": "hard",
        "author": "–ê–≤—Ç–æ—Ä 2",
        "color": "—Å–∏–Ω–∏–π"
      }
    ]
  }'

üìä –ü–û–õ–£–ß–ï–ù–ò–ï –°–¢–ê–¢–ò–°–¢–ò–ö–ò:
curl http://127.0.0.1:8000/api/stats/

üë• –°–ü–ò–°–û–ö –ê–í–¢–û–†–û–í:
curl http://127.0.0.1:8000/api/routes/authors/

üé® –°–ü–ò–°–û–ö –¶–í–ï–¢–û–í:
curl http://127.0.0.1:8000/api/routes/colors/

‚ö° –ü–ï–†–ï–ö–õ–Æ–ß–ï–ù–ò–ï –°–¢–ê–¢–£–°–ê:
curl -X POST http://127.0.0.1:8000/api/routes/1/toggle-active/
    """)

def demo_features():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π"""
    print_section("‚ú® –í–û–ó–ú–û–ñ–ù–û–°–¢–ò –ü–†–û–ï–ö–¢–ê")
    
    features = [
        "‚úÖ –ü–æ–ª–Ω—ã–π CRUD —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –¥–ª—è —Ç—Ä–∞—Å—Å",
        "‚úÖ –ú–∞—Å—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ (—Å–æ–∑–¥–∞–Ω–∏–µ/—É–¥–∞–ª–µ–Ω–∏–µ/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ)",
        "‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –∫—Ä–∏—Ç–µ—Ä–∏—è–º–∏",
        "‚úÖ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏, –∞–≤—Ç–æ—Ä—É, —Ü–≤–µ—Ç—É, –¥–∞—Ç–µ",
        "‚úÖ –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –ª—é–±–æ–º—É –ø–æ–ª—é",
        "‚úÖ –ü–∞–≥–∏–Ω–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤",
        "‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤—Å–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º",
        "‚úÖ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π",
        "‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö",
        "‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫",
        "‚úÖ –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å Django",
        "‚úÖ REST API —Å JSON –æ—Ç–≤–µ—Ç–∞–º–∏",
        "‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ —Å–∫—Ä–∏–ø—Ç—ã",
        "‚úÖ Docker –ø–æ–¥–¥–µ—Ä–∂–∫–∞"
    ]
    
    for feature in features:
        print(f"  {feature}")
    
    print(f"\nüìÅ –°–¢–†–£–ö–¢–£–†–ê –ü–†–û–ï–ö–¢–ê:")
    print(f"  climbing_routes_project/")
    print(f"  ‚îú‚îÄ‚îÄ climbing_routes_project/  # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Django")
    print(f"  ‚îú‚îÄ‚îÄ routes/                   # –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ç—Ä–∞—Å—Å")
    print(f"  ‚îÇ   ‚îú‚îÄ‚îÄ models.py            # –ú–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö")
    print(f"  ‚îÇ   ‚îú‚îÄ‚îÄ views.py             # API –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è")
    print(f"  ‚îÇ   ‚îú‚îÄ‚îÄ serializers.py       # –°–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä—ã")
    print(f"  ‚îÇ   ‚îú‚îÄ‚îÄ urls.py              # URL –º–∞—Ä—à—Ä—É—Ç—ã")
    print(f"  ‚îÇ   ‚îî‚îÄ‚îÄ admin.py             # –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å")
    print(f"  ‚îú‚îÄ‚îÄ manage.py                # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Django")
    print(f"  ‚îú‚îÄ‚îÄ requirements.txt         # –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏")
    print(f"  ‚îú‚îÄ‚îÄ Dockerfile               # Docker –æ–±—Ä–∞–∑")
    print(f"  ‚îú‚îÄ‚îÄ docker-compose.yml       # Docker Compose")
    print(f"  ‚îú‚îÄ‚îÄ test_api.py              # –¢–µ—Å—Ç—ã API")
    print(f"  ‚îú‚îÄ‚îÄ demo.py                  # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è")
    print(f"  ‚îî‚îÄ‚îÄ README.md                # –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è")

def demo_installation():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏"""
    print_section("üöÄ –£–°–¢–ê–ù–û–í–ö–ê –ò –ó–ê–ü–£–°–ö")
    
    print("""
üìã –°–ü–û–°–û–ë–´ –£–°–¢–ê–ù–û–í–ö–ò:

1Ô∏è‚É£ –ß–ï–†–ï–ó DOCKER (–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è):
   docker-compose up --build
   # –∏–ª–∏
   ./start.sh

2Ô∏è‚É£ –õ–û–ö–ê–õ–¨–ù–ê–Ø –£–°–¢–ê–ù–û–í–ö–ê:
   # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
   pip3 install -r requirements.txt
   
   # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π
   python3 manage.py migrate
   
   # –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
   python3 manage.py load_sample_data
   
   # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
   python3 manage.py runserver

3Ô∏è‚É£ –ß–ï–†–ï–ó HOMEBREW:
   brew install python
   pip3 install -r requirements.txt
   python3 manage.py migrate
   python3 manage.py runserver

üîß –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ö–û–ú–ê–ù–î–´:
   python3 manage.py createsuperuser  # –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∞
   python3 demo.py                    # –ë—ã—Å—Ç—Ä–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è
   python3 test_api.py                # –ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    """)

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    print("üéØ –°–¢–ê–¢–ò–ß–ï–°–ö–ê–Ø –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø API –¢–†–ê–°–° –°–ö–ê–õ–û–î–†–û–ú–ê")
    print(f"–í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    
    demo_api_structure()
    demo_data_structures()
    demo_api_examples()
    demo_features()
    demo_installation()
    
    print_section("üéâ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï")
    print("""
–ü—Ä–æ–µ–∫—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é! 

üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:
   - README.md - –æ—Å–Ω–æ–≤–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
   - SETUP.md - –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ
   - test_api.py - –ø—Ä–∏–º–µ—Ä—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

üåê –ü–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:
   - API: http://127.0.0.1:8000/api/
   - –ê–¥–º–∏–Ω: http://127.0.0.1:8000/admin/
   - –°–ø–∏—Å–æ–∫ —Ç—Ä–∞—Å—Å: http://127.0.0.1:8000/api/routes/

üîß –î–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ —Å–ø–æ—Å–æ–±–æ–≤:
   1. Docker: ./start.sh
   2. –õ–æ–∫–∞–ª—å–Ω–æ: pip3 install -r requirements.txt && python3 manage.py runserver
   3. Homebrew: brew install python && pip3 install -r requirements.txt
    """)

if __name__ == "__main__":
    main()
