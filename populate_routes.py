#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Ç—Ä–∞—Å—Å–∞–º–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
35 –¥–æ—Ä–æ–∂–µ–∫, –ø–æ 4 —Ç—Ä–∞—Å—Å—ã –Ω–∞ –∫–∞–∂–¥–æ–π –¥–æ—Ä–æ–∂–∫–µ (–≤—Å–µ–≥–æ 140 —Ç—Ä–∞—Å—Å)
"""

import os
import sys
import django
from datetime import datetime, timedelta
import random

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'climbing_routes_project.settings')
django.setup()

from routes.models import Route

def populate_routes():
    """–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Ç—Ä–∞—Å—Å–∞–º–∏"""
    
    print("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Ç—Ä–∞—Å—Å–∞–º–∏...")
    
    # –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ
    Route.objects.all().delete()
    print("üóëÔ∏è –û—á–∏—â–µ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö")
    
    # –°–ø–∏—Å–æ–∫ —Å–ª–æ–∂–Ω–æ—Å—Ç–µ–π
    difficulties = ['4', '4-5', '5', '5+', '6a', '6a+', '6b', '6b+', '6c', '6c+', '7a', '7a+', '7b', '7b+', '7c', '7c+', '8a', '8a+', '8b', '8b+', '8c', '9a']
    
    # –°–ø–∏—Å–æ–∫ —Ü–≤–µ—Ç–æ–≤
    colors = ['–ö—Ä–∞—Å–Ω—ã–π', '–°–∏–Ω–∏–π', '–ó–µ–ª–µ–Ω—ã–π', '–ñ–µ–ª—Ç—ã–π', '–§–∏–æ–ª–µ—Ç–æ–≤—ã–π', '–û—Ä–∞–Ω–∂–µ–≤—ã–π', '–†–æ–∑–æ–≤—ã–π', '–ë–µ–ª—ã–π', '–ß–µ—Ä–Ω—ã–π', '–°–µ—Ä—ã–π', '–ë–∏—Ä—é–∑–æ–≤—ã–π', '–ö–æ—Ä–∏—á–Ω–µ–≤—ã–π']
    
    # –°–ø–∏—Å–æ–∫ –∞–≤—Ç–æ—Ä–æ–≤
    authors = ['–ñ–µ–Ω—è –ö–∞–ª–∞—à–Ω–∏–∫–æ–≤', 'Alex Prikazchikov', '–°–∞—à–∞ –¢–æ—Ä—É–±–∞—Ä–∏–Ω', '–ù–∏–∫–∏—Ç–∞ –ë–æ–Ω–¥–∞—Ä–µ–≤', '–ê–Ω–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞', '–ú–∞–∫—Å–∏–º –ü–µ—Ç—Ä–æ–≤', '–ï–ª–µ–Ω–∞ –ö–æ–∑–ª–æ–≤–∞', '–î–º–∏—Ç—Ä–∏–π –í–æ–ª–∫–æ–≤']
    
    # –°–ø–∏—Å–æ–∫ –Ω–∞–∑–≤–∞–Ω–∏–π —Ç—Ä–∞—Å—Å
    route_names = [
        '–¢—Ä–∞—Å—Å–∞', '–í–µ—Ä—Ç–∏–∫–∞–ª—å', '–î–∏–∞–≥–æ–Ω–∞–ª—å', '–¢—Ä–∞–≤–µ—Ä—Å', '–ö—Ä—ã—à–∞', '–°—Ç–µ–Ω–∞', '–£–≥–æ–ª', '–ü–µ—Ä–µ—Ö–æ–¥',
        '–ú–æ—â—å', '–¢–µ—Ö–Ω–∏–∫–∞', '–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å', '–ì–∏–±–∫–æ—Å—Ç—å', '–ë–∞–ª–∞–Ω—Å', '–ö–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—è', '–°–∫–æ—Ä–æ—Å—Ç—å',
        '–¢–µ—Ä–ø–µ–Ω–∏–µ', '–°–º–µ–ª–æ—Å—Ç—å', '–õ–æ–≥–∏–∫–∞', '–ò–Ω—Ç—É–∏—Ü–∏—è', '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ', '–ì–∞—Ä–º–æ–Ω–∏—è', '–≠–Ω–µ—Ä–≥–∏—è',
        '–î–≤–∏–∂–µ–Ω–∏–µ', '–ü–æ—Ç–æ–∫', '–†–∏—Ç–º', '–ú–µ–ª–æ–¥–∏—è', '–¢–∞–Ω–µ—Ü', '–ü–æ–ª–µ—Ç', '–°–≤–æ–±–æ–¥–∞', '–ú–µ—á—Ç–∞'
    ]
    
    route_number = 1
    created_count = 0
    
    # –°–æ–∑–¥–∞–µ–º —Ç—Ä–∞—Å—Å—ã –¥–ª—è –∫–∞–∂–¥–æ–π –¥–æ—Ä–æ–∂–∫–∏
    for lane in range(1, 36):  # 35 –¥–æ—Ä–æ–∂–µ–∫
        for position in range(1, 5):  # 4 —Ç—Ä–∞—Å—Å—ã –Ω–∞ –¥–æ—Ä–æ–∂–∫–µ
            try:
                # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                difficulty = random.choice(difficulties)
                color = random.choice(colors)
                author = random.choice(authors)
                name = f"{random.choice(route_names)} {route_number}"
                
                # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—É—é –¥–∞—Ç—É –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 6 –º–µ—Å—è—Ü–µ–≤
                days_ago = random.randint(1, 180)
                setup_date = datetime.now() - timedelta(days=days_ago)
                setup_date_str = setup_date.strftime('%d.%m.%Y')
                
                # –°–æ–∑–¥–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
                description = f"–¢—Ä–∞—Å—Å–∞ –Ω–∞ –¥–æ—Ä–æ–∂–∫–µ {lane}, –ø–æ–∑–∏—Ü–∏—è {position}. –°–ª–æ–∂–Ω–æ—Å—Ç—å: {difficulty}"
                
                # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç Route
                route = Route(
                    route_number=route_number,
                    track_lane=lane,
                    name=name,
                    difficulty=difficulty,
                    color=color,
                    author=author,
                    setup_date=setup_date_str,
                    description=description,
                    is_active=random.choice([True, True, True, False])  # 75% –∞–∫—Ç–∏–≤–Ω—ã—Ö
                )
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
                route.save()
                created_count += 1
                route_number += 1
                
                if created_count % 50 == 0:
                    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ {created_count} —Ç—Ä–∞—Å—Å...")
                    
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç—Ä–∞—Å—Å—ã {route_number}: {str(e)}")
                continue
    
    print(f"\nüéâ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ: {created_count} —Ç—Ä–∞—Å—Å")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    total_routes = Route.objects.count()
    active_routes = Route.objects.filter(is_active=True).count()
    inactive_routes = Route.objects.filter(is_active=False).count()
    
    print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:")
    print(f"   –í—Å–µ–≥–æ —Ç—Ä–∞—Å—Å: {total_routes}")
    print(f"   –ê–∫—Ç–∏–≤–Ω—ã—Ö: {active_routes}")
    print(f"   –ù–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö: {inactive_routes}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –¥–æ—Ä–æ–∂–∫–∞–º
    print(f"\nüõ§Ô∏è –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –¥–æ—Ä–æ–∂–∫–∞–º:")
    for lane in range(1, 36):
        count = Route.objects.filter(track_lane=lane).count()
        if count > 0:
            print(f"   –î–æ—Ä–æ–∂–∫–∞ {lane}: {count} —Ç—Ä–∞—Å—Å")
    
    return True

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Ç—Ä–∞—Å—Å–∞–º–∏")
    print("=" * 60)
    print("–°—Ç—Ä—É–∫—Ç—É—Ä–∞: 35 –¥–æ—Ä–æ–∂–µ–∫, –ø–æ 4 —Ç—Ä–∞—Å—Å—ã –Ω–∞ –∫–∞–∂–¥–æ–π (–≤—Å–µ–≥–æ 140 —Ç—Ä–∞—Å—Å)")
    print("=" * 60)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ
    success = populate_routes()
    
    if success:
        print("\nüéâ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        print("–¢–µ–ø–µ—Ä—å –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–¥–µ—Ä–∂–∏—Ç 140 —Ç—Ä–∞—Å—Å —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π")
    else:
        print("\n‚ùå –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å —Å –æ—à–∏–±–∫–∞–º–∏")
        sys.exit(1)

if __name__ == "__main__":
    main()
