#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö –∑–Ω–∞—á–µ–Ω–∏–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –Ω–∞ —Å—Ç—Ä–æ—á–Ω—ã–µ –±—É–∫–≤—ã
"""
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'climbing_routes_project.settings')
django.setup()

from routes.models import Route

def update_difficulty_to_lowercase():
    """–û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –Ω–∞ —Å—Ç—Ä–æ—á–Ω—ã–µ –±—É–∫–≤—ã"""
    print("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –Ω–∞ —Å—Ç—Ä–æ—á–Ω—ã–µ –±—É–∫–≤—ã...")
    
    # –ú–∞–ø–ø–∏–Ω–≥ –∑–∞–≥–ª–∞–≤–Ω—ã—Ö –±—É–∫–≤ –Ω–∞ —Å—Ç—Ä–æ—á–Ω—ã–µ
    mapping = {
        '6A': '6a',
        '6A+': '6a+',
        '6B': '6b',
        '6B+': '6b+',
        '6C': '6c',
        '6C+': '6c+',
        '7A': '7a',
        '7A+': '7a+',
        '7B': '7b',
        '7B+': '7b+',
        '7C': '7c',
        '7C+': '7c+',
        '8A': '8a',
        '8A+': '8a+',
        '8B': '8b',
        '8B+': '8b+',
        '8C': '8c',
        '9A': '9a'
    }
    
    updated_count = 0
    
    for old_value, new_value in mapping.items():
        routes = Route.objects.filter(difficulty=old_value)
        count = routes.count()
        
        if count > 0:
            print(f"üìù –û–±–Ω–æ–≤–ª—è–µ–º {count} —Ç—Ä–∞—Å—Å —Å '{old_value}' –Ω–∞ '{new_value}'")
            routes.update(difficulty=new_value)
            updated_count += count
    
    print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ {updated_count} —Ç—Ä–∞—Å—Å")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç...")
    values = set(Route.objects.values_list('difficulty', flat=True))
    print("–¢–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏:")
    print(sorted(values))
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Å—Ç–∞–ª–∏—Å—å –ª–∏ –∑–∞–≥–ª–∞–≤–Ω—ã–µ –±—É–∫–≤—ã
    uppercase_values = [v for v in values if any(c.isupper() for c in v)]
    if uppercase_values:
        print(f"‚ö†Ô∏è –û—Å—Ç–∞–ª–∏—Å—å –∑–∞–≥–ª–∞–≤–Ω—ã–µ –±—É–∫–≤—ã: {uppercase_values}")
    else:
        print("‚úÖ –í—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ —Ç–µ–ø–µ—Ä—å –≤ —Å—Ç—Ä–æ—á–Ω—ã—Ö –±—É–∫–≤–∞—Ö!")

if __name__ == "__main__":
    update_difficulty_to_lowercase()
